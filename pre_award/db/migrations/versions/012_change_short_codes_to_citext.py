"""Change short codes to citext

Revision ID: 012_change_short_codes_to_citext
Revises: 011_removing_unused_contact_fiel
Create Date: 2025-02-05 11:21:51.392173

"""

import sqlalchemy as sa
from alembic import op
from alembic_utils.pg_extension import PGExtension
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "012_change_short_codes_to_citext"
down_revision = "011_removing_unused_contact_fiel"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_citext = PGExtension(schema="public", signature="citext")
    op.create_entity(public_citext)
    with op.batch_alter_table("fund", schema=None) as batch_op:
        batch_op.alter_column(
            "short_name", existing_type=sa.VARCHAR(), type_=postgresql.CITEXT(), existing_nullable=False
        )

    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "short_name", existing_type=sa.VARCHAR(), type_=postgresql.CITEXT(), existing_nullable=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.alter_column(
            "short_name", existing_type=postgresql.CITEXT(), type_=sa.VARCHAR(), existing_nullable=False
        )

    with op.batch_alter_table("fund", schema=None) as batch_op:
        batch_op.alter_column(
            "short_name", existing_type=postgresql.CITEXT(), type_=sa.VARCHAR(), existing_nullable=False
        )

    public_citext = PGExtension(schema="public", signature="citext")
    op.drop_entity(public_citext)
    # ### end Alembic commands ###
