"""reference data

Revision ID: 028_reference_data
Revises: 027_validation_opt
Create Date: 2025-03-04 14:48:32.156959

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "028_reference_data"
down_revision = "027_validation_opt"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_store",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_data_store")),
    )
    op.create_table(
        "data_store_entry",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("data_store_id", sa.Integer(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_store_id"], ["data_store.id"], name=op.f("fk_data_store_entry_data_store_id_data_store")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_data_store_entry")),
    )
    with op.batch_alter_table("proto_data_collection_definition_question", schema=None) as batch_op:
        batch_op.add_column(sa.Column("reference_data_source_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            batch_op.f("fk_proto_data_collection_definition_question_reference_data_source_id_data_store"),
            "data_store",
            ["reference_data_source_id"],
            ["id"],
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("proto_data_collection_definition_question", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_proto_data_collection_definition_question_reference_data_source_id_data_store"),
            type_="foreignkey",
        )
        batch_op.drop_column("reference_data_source_id")

    op.drop_table("data_store_entry")
    op.drop_table("data_store")
    # ### end Alembic commands ###
