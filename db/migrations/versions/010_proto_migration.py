"""PROTO migration

Revision ID: 010_proto_migration
Revises: 009_relax_flag_json_constraints
Create Date: 2025-01-05 17:28:17.470837

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "010_proto_migration"
down_revision = "009_relax_flag_json_constraints"
branch_labels = None
depends_on = None

from proto.common.data.models.applications import ProtoApplicationStatus


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("fund", schema=None) as batch_op:
        batch_op.add_column(sa.Column("proto_name", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("proto_name_cy", sa.String(), nullable=True))
        batch_op.add_column(
            sa.Column("proto_created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(
            sa.Column("proto_updated_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(sa.Column("proto_prospectus_link", sa.String(), nullable=True))
        batch_op.add_column(sa.Column("proto_apply_action_description", sa.String(), nullable=True))

    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.add_column(sa.Column("proto_start_date", sa.Date(), nullable=True))
        batch_op.add_column(sa.Column("proto_end_date", sa.Date(), nullable=True))
        batch_op.add_column(
            sa.Column("proto_created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(
            sa.Column("proto_updated_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )

    # I don't know why this is happenening
    sa.Enum(ProtoApplicationStatus).create(op.get_bind(), checkfirst=True)

    with op.batch_alter_table("applications", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "proto_status",
                sa.Enum(
                    "CREATED",
                    "APPLYING",
                    "SUBMITTED",
                    "CHANGES_REQUESTED",
                    "AWARDED",
                    "REJECTED",
                    "CLOSED",
                    name="protoapplicationstatus",
                ),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column("proto_updated_by_applicant_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(
            sa.Column("proto_created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(
            sa.Column("proto_updated_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.alter_column(
            "account_id",
            existing_type=sa.VARCHAR(),
            type_=sa.UUID(),
            postgresql_using="account_id::uuid",
            existing_nullable=False,
        )

        batch_op.alter_column(
            "round_id",
            existing_type=sa.VARCHAR(),
            type_=sa.UUID(),
            postgresql_using="round_id::uuid",
            existing_nullable=False,
        )
        # batch_op.alter_column(sa.Column("account_id"), sa.UUID())
        batch_op.create_foreign_key(batch_op.f("fk_applications_account_id_account"), "account", ["account_id"], ["id"])
        batch_op.create_foreign_key(batch_op.f("fk_applications_round_id_round"), "round", ["round_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("round", schema=None) as batch_op:
        batch_op.drop_column("proto_updated_date")
        batch_op.drop_column("proto_created_date")
        batch_op.drop_column("proto_end_date")
        batch_op.drop_column("proto_start_date")

    with op.batch_alter_table("fund", schema=None) as batch_op:
        batch_op.drop_column("proto_name_cy")
        batch_op.drop_column("proto_name")
        batch_op.drop_column("proto_apply_action_description")
        batch_op.drop_column("proto_prospectus_link")
        batch_op.drop_column("proto_updated_date")
        batch_op.drop_column("proto_created_date")

    with op.batch_alter_table("applications", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("fk_applications_round_id_round"), type_="foreignkey")
        batch_op.drop_constraint(batch_op.f("fk_applications_account_id_account"), type_="foreignkey")
        batch_op.alter_column("account_id", existing_type=sa.UUID(), type_=sa.VARCHAR(), existing_nullable=False)
        batch_op.drop_column("proto_updated_date")
        batch_op.drop_column("proto_created_date")
        batch_op.drop_column("proto_updated_by_applicant_date")
        batch_op.drop_column("proto_status")

    sa.Enum(ProtoApplicationStatus).drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
