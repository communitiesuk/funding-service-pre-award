"""add conditions

Revision ID: 015_add_conditions
Revises: 014_grant_recipients
Create Date: 2025-02-14 15:03:24.252843

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "015_add_conditions"
down_revision = "014_grant_recipients"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "proto_data_collection_question_condition",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("depends_on_question_id", sa.Integer(), nullable=False),
        sa.Column("criteria", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["depends_on_question_id"],
            ["proto_data_collection_definition_question.id"],
            name=op.f(
                "fk_proto_data_collection_question_condition_depends_on_question_id_proto_data_collection_definition_question"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["proto_data_collection_definition_question.id"],
            name=op.f(
                "fk_proto_data_collection_question_condition_question_id_proto_data_collection_definition_question"
            ),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_proto_data_collection_question_condition")),
    )
    with op.batch_alter_table("proto_data_collection_definition_question", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "condition_combination_type", postgresql.ENUM("AND", "OR", name="conditioncombination"), nullable=False
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("proto_data_collection_definition_question", schema=None) as batch_op:
        batch_op.drop_column("condition_combination_type")

    op.drop_table("proto_data_collection_question_condition")
    # ### end Alembic commands ###
