"""Apply auth

Revision ID: 017_apply_auth
Revises: 016_copy_round_dates
Create Date: 2025-01-21 20:45:18.851291

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "017_apply_auth"
down_revision = "016_copy_round_dates"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "magic_link",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("used", sa.Boolean(), nullable=False),
        sa.Column(
            "expires_date", sa.DateTime(), server_default=sa.text("now() + make_interval(secs=>3600.0)"), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_magic_link")),
    )
    with op.batch_alter_table("magic_link", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_magic_link_token"), ["token"], unique=True)

    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_magic_link", sa.Boolean(), nullable=True))
        batch_op.add_column(
            sa.Column("proto_created_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )
        batch_op.add_column(
            sa.Column("proto_updated_date", sa.DateTime(), server_default=sa.text("now()"), nullable=True)
        )

    with op.batch_alter_table("proto_application", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("updated_by_applicant_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False)
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("proto_application", schema=None) as batch_op:
        batch_op.drop_column("updated_by_applicant_at")

    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.drop_column("proto_updated_date")
        batch_op.drop_column("proto_created_date")
        batch_op.drop_column("is_magic_link")

    with op.batch_alter_table("magic_link", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_magic_link_token"))

    op.drop_table("magic_link")
    # ### end Alembic commands ###
