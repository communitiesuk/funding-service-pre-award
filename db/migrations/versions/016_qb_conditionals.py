"""qb conditionals

Revision ID: 016_qb_conditionals
Revises: 015_add_conditions
Create Date: 2025-02-19 11:46:17.530585

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "016_qb_conditionals"
down_revision = "015_add_conditions"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "template_question_condition",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("depends_on_question_id", sa.Integer(), nullable=True),
        sa.Column("criteria", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["depends_on_question_id"],
            ["template_question.id"],
            name=op.f("fk_template_question_condition_depends_on_question_id_template_question"),
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["template_question.id"],
            name=op.f("fk_template_question_condition_question_id_template_question"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_template_question_condition")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("template_question_condition")
    # ### end Alembic commands ###
